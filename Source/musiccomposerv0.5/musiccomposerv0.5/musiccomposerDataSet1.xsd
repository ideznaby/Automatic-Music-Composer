<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="musiccomposerDataSet1" targetNamespace="http://tempuri.org/musiccomposerDataSet1.xsd" xmlns:mstns="http://tempuri.org/musiccomposerDataSet1.xsd" xmlns="http://tempuri.org/musiccomposerDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="musiccomposerConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="musiccomposerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.musiccomposerv0._5.Properties.Settings.GlobalReference.Default.musiccomposerConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="feelingsTableAdapter" GeneratorDataComponentClassName="feelingsTableAdapter" Name="feelings" UserDataComponentName="feelingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musiccomposerConnectionString (Settings)" DbObjectName="musiccomposer.dbo.feelings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[feelings] WHERE (([feel#] = @Original_feel#) AND ([feelname] = @Original_feelname))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_feel#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="feel#" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_feelname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="feelname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[feelings] ([feel#], [feelname]) VALUES (@feel#, @feelname);
SELECT feel#, feelname FROM feelings WHERE (feel# = @feel_)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@feel#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="feel#" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@feelname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="feelname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="feel_" ColumnName="feel#" DataSourceName="musiccomposer.dbo.feelings" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@feel_" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="feel#" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT feel#, feelname FROM dbo.feelings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[feelings] SET [feel#] = @feel#, [feelname] = @feelname WHERE (([feel#] = @Original_feel#) AND ([feelname] = @Original_feelname));
SELECT feel#, feelname FROM feelings WHERE (feel# = @feel_)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@feel#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="feel#" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@feelname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="feelname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_feel#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="feel#" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_feelname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="feelname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="feel_" ColumnName="feel#" DataSourceName="musiccomposer.dbo.feelings" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@feel_" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="feel#" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="feel#" DataSetColumn="feel#" />
              <Mapping SourceColumn="feelname" DataSetColumn="feelname" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="genresTableAdapter" GeneratorDataComponentClassName="genresTableAdapter" Name="genres" UserDataComponentName="genresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musiccomposerConnectionString (Settings)" DbObjectName="musiccomposer.dbo.genres" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[genres] WHERE (([genre#] = @Original_genre#) AND ([genrename] = @Original_genrename) AND ((@IsNull_baseinst# = 1 AND [baseinst#] IS NULL) OR ([baseinst#] = @Original_baseinst#)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre#" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_genrename" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genrename" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_baseinst#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="baseinst#" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_baseinst#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="baseinst#" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[genres] ([genre#], [genrename], [baseinst#]) VALUES (@genre#, @genrename, @baseinst#);
SELECT genre#, genrename, baseinst# FROM genres WHERE (genre# = @genre_)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genre#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre#" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@genrename" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genrename" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@baseinst#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="baseinst#" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="genre_" ColumnName="genre#" DataSourceName="musiccomposer.dbo.genres" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@genre_" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="genre#" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT genre#, genrename, baseinst# FROM dbo.genres</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[genres] SET [genre#] = @genre#, [genrename] = @genrename, [baseinst#] = @baseinst# WHERE (([genre#] = @Original_genre#) AND ([genrename] = @Original_genrename) AND ((@IsNull_baseinst# = 1 AND [baseinst#] IS NULL) OR ([baseinst#] = @Original_baseinst#)));
SELECT genre#, genrename, baseinst# FROM genres WHERE (genre# = @genre_)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genre#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre#" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@genrename" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genrename" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@baseinst#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="baseinst#" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre#" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_genrename" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genrename" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_baseinst#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="baseinst#" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_baseinst#" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="baseinst#" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="genre_" ColumnName="genre#" DataSourceName="musiccomposer.dbo.genres" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@genre_" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="genre#" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="genre#" DataSetColumn="genre#" />
              <Mapping SourceColumn="genrename" DataSetColumn="genrename" />
              <Mapping SourceColumn="baseinst#" DataSetColumn="baseinst#" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="musiccomposerDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="musiccomposerDataSet1" msprop:Generator_UserDSName="musiccomposerDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="feelings" msprop:Generator_TableClassName="feelingsDataTable" msprop:Generator_TableVarName="tablefeelings" msprop:Generator_TablePropName="feelings" msprop:Generator_RowDeletingName="feelingsRowDeleting" msprop:Generator_UserTableName="feelings" msprop:Generator_RowChangingName="feelingsRowChanging" msprop:Generator_RowEvHandlerName="feelingsRowChangeEventHandler" msprop:Generator_RowDeletedName="feelingsRowDeleted" msprop:Generator_RowEvArgName="feelingsRowChangeEvent" msprop:Generator_RowChangedName="feelingsRowChanged" msprop:Generator_RowClassName="feelingsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="feel_x0023_" msprop:Generator_ColumnVarNameInTable="_columnfeel_" msprop:Generator_ColumnPropNameInRow="_feel_" msprop:Generator_ColumnPropNameInTable="_feel_Column" msprop:Generator_UserColumnName="feel#" type="xs:int" />
              <xs:element name="feelname" msprop:Generator_ColumnVarNameInTable="columnfeelname" msprop:Generator_ColumnPropNameInRow="feelname" msprop:Generator_ColumnPropNameInTable="feelnameColumn" msprop:Generator_UserColumnName="feelname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="genres" msprop:Generator_TableClassName="genresDataTable" msprop:Generator_TableVarName="tablegenres" msprop:Generator_TablePropName="genres" msprop:Generator_RowDeletingName="genresRowDeleting" msprop:Generator_UserTableName="genres" msprop:Generator_RowChangingName="genresRowChanging" msprop:Generator_RowEvHandlerName="genresRowChangeEventHandler" msprop:Generator_RowDeletedName="genresRowDeleted" msprop:Generator_RowEvArgName="genresRowChangeEvent" msprop:Generator_RowChangedName="genresRowChanged" msprop:Generator_RowClassName="genresRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="genre_x0023_" msprop:Generator_ColumnVarNameInTable="_columngenre_" msprop:Generator_ColumnPropNameInRow="_genre_" msprop:Generator_ColumnPropNameInTable="_genre_Column" msprop:Generator_UserColumnName="genre#" type="xs:int" />
              <xs:element name="genrename" msprop:Generator_ColumnVarNameInTable="columngenrename" msprop:Generator_ColumnPropNameInRow="genrename" msprop:Generator_ColumnPropNameInTable="genrenameColumn" msprop:Generator_UserColumnName="genrename">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="baseinst_x0023_" msprop:Generator_ColumnVarNameInTable="_columnbaseinst_" msprop:Generator_ColumnPropNameInRow="_baseinst_" msprop:Generator_ColumnPropNameInTable="_baseinst_Column" msprop:Generator_UserColumnName="baseinst#" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:feelings" />
      <xs:field xpath="mstns:feel_x0023_" />
    </xs:unique>
    <xs:unique name="genres_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:genres" />
      <xs:field xpath="mstns:genre_x0023_" />
    </xs:unique>
  </xs:element>
</xs:schema>